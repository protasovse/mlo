# Generated by Django 2.0 on 2017-12-17 12:59

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('rubric', '0002_auto_20171215_1331'),
        ('mlo_auth', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Содержание')),
                ('pub_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='Дата публикации')),
                ('status', models.IntegerField(choices=[(0, 'Удалённый'), (1, 'Черновик'), (2, 'Опубликован')], db_index=True, default=2, verbose_name='Статус')),
                ('like_count', models.IntegerField(db_index=True, default=0, editable=False, verbose_name='Лайки')),
                ('reply_count', models.IntegerField(db_index=True, default=0, editable=False, verbose_name='Количество ответов')),
            ],
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='entries/files/%Y/%m/%d', verbose_name='Файл')),
            ],
            options={
                'verbose_name': 'Файл',
                'verbose_name_plural': 'Файлы',
            },
        ),
        migrations.CreateModel(
            name='Likes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.PositiveIntegerField(verbose_name='Стоимость услуг')),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.IntegerField(choices=[('0', 'Новое'), ('1', 'Просмотрено клиентом'), ('5', 'Оплачен'), ('-1', 'Отменён')], db_index=True, default='0', verbose_name='Статус предложения')),
                ('paid_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Предложение услуг',
                'verbose_name_plural': 'Предложения услуг',
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('entry_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entry.Entry')),
            ],
            options={
                'verbose_name': 'Ответ',
                'verbose_name_plural': 'Ответы',
            },
            bases=('entry.entry',),
            managers=[
                ('answers', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('entry_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entry.Entry')),
                ('title', models.CharField(max_length=160, verbose_name='Заголовок')),
                ('rubrics', mptt.fields.TreeManyToManyField(blank=True, to='rubric.Rubric', verbose_name='Рубрика')),
            ],
            options={
                'verbose_name': 'Вопрос',
                'verbose_name_plural': 'Вопросы',
                'ordering': ('-id',),
            },
            bases=('entry.entry', models.Model),
        ),
        migrations.AddField(
            model_name='likes',
            name='entry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='entry.Entry'),
        ),
        migrations.AddField(
            model_name='likes',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mlo_auth.User'),
        ),
        migrations.AddField(
            model_name='files',
            name='entry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='entry.Entry'),
        ),
        migrations.AddField(
            model_name='entry',
            name='author',
            field=models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, related_name='entry_set', to='mlo_auth.User'),
        ),
        migrations.AddField(
            model_name='offer',
            name='answer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entry.Answer'),
        ),
        migrations.AlterUniqueTogether(
            name='likes',
            unique_together={('entry', 'user')},
        ),
        migrations.AddField(
            model_name='answer',
            name='on_question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='entry.Question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='entry.Answer'),
        ),
    ]
